{"version":3,"sources":["./src/app/models/room.model.ts","./src/app/component-rooms/rooms-view/rooms-view.component.ts","./src/app/component-rooms/rooms-view/rooms-view.component.html","./src/app/component-rooms/component-rooms.module.ts","./src/app/component-rooms/rooms-use/rooms-use.component.ts","./src/app/component-rooms/rooms-use/rooms-use.component.html","./src/app/component-rooms/rooms-add/rooms-add.component.ts","./src/app/component-rooms/rooms-add/rooms-add.component.html","./src/app/component-rooms/rooms-details/rooms-details.component.ts","./src/app/component-rooms/rooms-details/rooms-details.component.html","./src/app/component-rooms/component-rooms-routing.module.ts","./src/app/component-rooms/chats-board/chats-board.component.ts","./src/app/component-rooms/chats-board/chats-board.component.html","./src/app/services/room.service.ts"],"names":[],"mappings":"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","file":"component-rooms-component-rooms-module.js","sourcesContent":["export class Room\n{\n    key?: string | null;\n    id?: number;\n    name?: string;\n    description?: string;\n    type?: string;\n    tags?: string;\n    people?: number;\n    messages?: number;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RoomService } from 'src/app/services/room.service';\nimport { Room } from 'src/app/models/room.model';\nimport { map } from 'rxjs/operators';\nimport { CookieCatcherService } from 'src/app/services/cookie-catcher.service';\n\n@Component({\n    selector: 'app-rooms-view',\n    templateUrl: './rooms-view.component.html',\n    styleUrls: ['./rooms-view.component.css']\n})\n\nexport class RoomsViewComponent implements OnInit {\n    roomData?: Room[];\n    currentRoom?: Room;\n    currentIndex = -1;\n\n    constructor(\n        private RoomService: RoomService,\n        public CookieCatcherService: CookieCatcherService\n    ) { }\n\n    ngOnInit(): void \n    {\n        this.retrieveRoom();\n    }\n\n    refreshList(): void\n    {\n        this.retrieveRoom();\n    }\n\n    retrieveRoom(): void\n    {\n        this.RoomService.getAll()\n            .snapshotChanges()\n            .pipe(\n                map(changes => \n                    changes.map(c =>\n                        ({ key: c.payload.key, ...c.payload.val() })\n                    )\n                )\n            ).subscribe(data => {\n              // splice the Array\n              this.roomData = data;\n            }\n        );\n    }\n\n    setActiveRoom(room: Room, index: number): void\n    {\n        if(index == this.currentIndex){\n            this.currentRoom = undefined;\n            this.currentIndex = -1;\n        }else{\n            this.currentRoom = room;\n            this.currentIndex = index;\n        }\n    }\n\n    removeAllNews(): void\n    {\n        this.RoomService.deleteAll()\n            .then( () => this.refreshList() )\n            .catch(err => console.log(err));\n    }\n\n    root(): boolean\n    {\n        return this.CookieCatcherService.checkUserRoot();\n    }\n}\n","<h2>討論室</h2>\n\n<div *ngIf=\"root()\">\n    <button routerLink=\"add\" class=\"btn btn-success\">\n        新增討論室\n    </button>\n</div>\n\n<div class=\"mx-auto\">\n    <div class=\"container\" *ngFor=\"let item of roomData; index as i;\">\n        <div class=\"card d-block float-start text-center m-3\" style=\"width: 30%; min-height: 250px;\">\n            <div class=\"card-header\">\n                <h5>{{ item.name }}</h5>\n            </div>\n            <div class=\"card-body\">\n                <p class=\"m-2 text-muted\">\n                    {{ item.description }}\n                </p>\n                \n                <div>\n                    <span class=\"px-2\">\n                        參加人數: {{ item.people == null ? 0 : item.people }}\n                    </span>\n                    <span>|</span>\n                    <span class=\"px-2\">\n                        總訊息數: {{ item.messages == null ? 0 : item.people }}\n                    </span>\n                </div>\n                \n                <p class=\"m-3\">\n                    <button class=\"btn btn-primary\"\n                        routerLink = \"/room/{{ item.id }}\"\n                    >加入聊天</button>\n                </p>\n                <div *ngIf=\"root()\">\n                    <div *ngIf=\"i == currentIndex\">\n                        <app-rooms-details\n                            (refreshList)=\"refreshList()\"\n                            [room]=\"currentRoom\"\n                        ></app-rooms-details>\n                    </div>\n\n                    <div class=\"text-right\">\n                        <button class=\"btn btn-light fw-bold border-secondary\"\n                            (click)=\"setActiveRoom(item, i)\"\n                            [class.active]=\"i == currentIndex\">\n                            edit\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"clearfix\"></div>\n</div>\n\n<div class=\"clearfix\"></div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ComponentRoomsRoutingModule } from './component-rooms-routing.module';\nimport { RoomsViewComponent } from './rooms-view/rooms-view.component';\nimport { RoomsAddComponent } from './rooms-add/rooms-add.component';\nimport { RoomsDetailsComponent } from './rooms-details/rooms-details.component';\nimport { FormsModule } from '@angular/forms';\nimport { RoomsUseComponent } from './rooms-use/rooms-use.component';\nimport { ChatsBoardComponent } from './chats-board/chats-board.component';\nimport { ChatsAddComponent } from './chats-add/chats-add.component';\n\n@NgModule({\n  declarations: [\n    RoomsViewComponent,\n    RoomsAddComponent,\n    RoomsDetailsComponent,\n    RoomsUseComponent,\n    ChatsAddComponent,\n    ChatsBoardComponent,\n  ],\n  imports: [\n    CommonModule,\n    ComponentRoomsRoutingModule,\n    FormsModule\n  ]\n})\nexport class ComponentRoomsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { RoomService } from 'src/app/services/room.service';\nimport { Room } from 'src/app/models/room.model';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CookieService } from 'ngx-cookie-service';\nimport { UserService } from 'src/app/services/user.service';\nimport { User } from 'src/app/models/user.model';\nimport { CookieCatcherService } from 'src/app/services/cookie-catcher.service';\n\n@Component({\n    selector: 'app-rooms-use',\n    templateUrl: './rooms-use.component.html',\n    styleUrls: ['./rooms-use.component.css']\n})\nexport class RoomsUseComponent implements OnInit {\n    paramsID ?= -1;\n    roomData ?: Room[];\n    userData ?: User[];\n    admin = true;\n\n    userKey = '';\n    userNickname = '';\n    roomKey = '';\n\n    public = \n    {\n        id: 0,\n        name: '',\n        description: '',\n        tags: '',\n        people: 0,\n        messages: 0,\n    }\n\n    constructor(\n        private RoomService: RoomService,\n        private route: ActivatedRoute,\n        private CookieService: CookieService,\n        private UserService: UserService,\n        public CookieCatcherService: CookieCatcherService\n    ) {\n        this.userKey = this.CookieService.get('userKey');\n        // console.warn(this.userKey);\n    }\n\n    ngOnInit(): void\n    {\n        this.getSingleRoom();\n        this.getUser(this.userKey);\n    }\n\n    getUser(key: string): void\n    {\n        this.UserService.getAll().snapshotChanges()\n            .pipe(\n                map(changes => \n                    changes.map(c =>\n                        ({ key: c.payload.key, ...c.payload.val() })\n                    )\n                ),\n                map(data =>\n                    data.filter(c =>\n                        c.key === key\n                    )\n                )\n            )\n            .subscribe(res => {\n                this.userData = res;\n                this.userNickname = String(this.userData[0].nickname);\n                this.userKey = String(this.userData[0].key);\n\n            })\n    }\n\n    getSingleRoom() :void\n    {\n        this.paramsID = Number(this.route.snapshot.paramMap.get('id'));\n        \n        this.RoomService.getAll().snapshotChanges()\n            .pipe(\n                map(changes => \n                    changes.map(c =>\n                        ({ key: c.payload.key, ...c.payload.val() })\n                    )\n                ),\n                map(data =>\n                    data.filter(c =>\n                        c.id === this.paramsID\n                    )\n                )\n            )\n            .subscribe(res => {\n                this.roomData = res;\n\n                this.roomKey = String(this.roomData[0].key);\n\n                // 手動(之後再找方法)\n                this.public.id = Number(this.roomData[0]['id']);\n                this.public.name = String(this.roomData[0]['name']);\n                this.public.description = String(this.roomData[0]['description']);\n                this.public.people = Number(this.roomData[0]['people']);\n                this.public.messages = Number(this.roomData[0]['messages']);\n            })\n    }\n\n    checkLogin(): boolean\n    {\n        return this.CookieCatcherService.checkUserLogin();\n    }\n}\n","<h2>{{ public.name }} 聊天室</h2>\n\n<div class=\"alert alert-secondary border-2 border-light bordered-2\">\n    {{ public.description }}\n</div>\n<div *ngIf=\"!admin\">\n    <h4>聊天室所有資料列</h4>\n    <table class=\"table table-dark text-center\">\n        <thead>\n            <th>KEY</th>\n            <th>ID</th>\n            <th>NAME</th>\n            <th>DESCRIPTION</th>\n            <th>TYPE</th>\n            <th>TAGS</th>\n            <th>PEOPLE</th>\n            <th>MESSAGES</th>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let item of roomData\">\n                <th>{{ item.key }}</th>\n                <td>{{ item.id }}</td>\n                <td>{{ item.name }}</td>\n                <td>{{ item.description }}</td>\n                <td>{{ item.type }}</td>\n                <td>{{ item.tags }}</td>\n                <td>{{ item.people }}</td>\n                <td>{{ item.messages }}</td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<div class=\"row\" style=\"max-height: 500px; overflow-y: scroll;\">\n    <app-chats-board\n        [roomKey]=\"roomKey\"\n        [userKey]=\"userKey\"\n    ></app-chats-board>\n</div>\n<div class=\"row h-50\">\n    <div *ngIf=\"checkLogin()\">\n        <app-chats-add\n        [userKey]=\"userKey\"\n        [userNickname]=\"userNickname\"\n        [roomKey]=\"roomKey\"\n    ></app-chats-add>\n    </div>\n    <div *ngIf=\"!checkLogin()\" class=\"display-6 text-center text-muted p-3\">\n        登入後可以發表訊息\n    </div>\n</div>\n\n<div class=\"clearfix\"></div>","import { Component, OnInit } from '@angular/core';\nimport { Room } from 'src/app/models/room.model';\nimport { RoomService } from 'src/app/services/room.service';\n\n@Component({\n  selector: 'app-rooms-add',\n  templateUrl: './rooms-add.component.html',\n  styleUrls: ['./rooms-add.component.css']\n})\nexport class RoomsAddComponent implements OnInit {\n  room: Room = new Room();\n  submitted = false;\n\n  constructor(private RoomService: RoomService){ }\n\n  ngOnInit(): void {\n  }\n\n  saveNews(): void\n  {\n      this.RoomService.create(this.room)\n          .then( () => {\n              console.exception('Created new item successfully!');\n              this.submitted = true;\n          })\n  }\n\n}\n","<h2>Addition Room Works</h2>\n\n<div *ngIf=\"submitted\" class=\"p-3 mb-2 border border-3 rounded-2 border-success bg-light text-success\">\n    Submitted Status: {{ submitted }}\n</div>\n\n<div class=\"submit-form\">\n    <div class=\"form-group\">\n        <label for=\"name\">Title</label>\n        <input type=\"text\"\n        class=\"form-control\"\n        id=\"name\"\n        required\n        [(ngModel)] = \"room.name\"\n        name=\"name\">\n    </div>\n    <div class=\"form-group\">\n        <label for=\"Content\">Content</label>\n        <textarea\n        class=\"form-control\"\n        id=\"content\"\n        required\n        [(ngModel)] = \"room.description\"\n        name=\"content\"\n        rows=\"5\">\n        </textarea>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"Tags\">Tags</label>\n        <input type=\"text\"\n        class=\"form-control\"\n        id=\"tags\"\n        required\n        [(ngModel)] = \"room.tags\"\n        name=\"tags\">\n    </div>\n    <div class=\"form-group\">\n        <label for=\"Tags\">Type</label>\n        <input type=\"text\"\n        class=\"form-control\"\n        id=\"type\"\n        required\n        [(ngModel)] = \"room.type\"\n        name=\"type\">\n    </div>\n    <div class=\"row text-center\">\n        <button (click)=\"saveNews()\" class=\"btn btn-success\">Submit</button>\n    </div>\n</div>","import { Component, OnInit, Input, OnChanges, Output, EventEmitter } from '@angular/core';\nimport { Room } from 'src/app/models/room.model';\nimport { CookieCatcherService } from 'src/app/services/cookie-catcher.service';\nimport { RoomService } from 'src/app/services/room.service';\n\n@Component({\n  selector: 'app-rooms-details',\n  templateUrl: './rooms-details.component.html',\n  styleUrls: ['./rooms-details.component.css']\n})\n\nexport class RoomsDetailsComponent implements OnInit {\n    @Input() room?: Room;\n    @Output() refreshList: EventEmitter<any> = new EventEmitter;\n\n    currentRoom: Room = \n    {\n        id: 0,\n        name: '',\n        description: '',\n        type: '',\n        tags: ''\n    }\n\n    updateMessage = '';\n    setIDMessage = '';\n    deleteMessage = '';\n\n    constructor(\n        private RoomService: RoomService,\n        public CookieCatcherService: CookieCatcherService\n    ) { }\n\n    ngOnInit(): void \n    {\n        this.updateMessage = '';\n        this.setIDMessage = '';\n        this.deleteMessage = '';\n    }\n\n    ngOnChanges(): void\n    {\n        this.updateMessage = '';\n        this.setIDMessage = '';\n        this.deleteMessage = '';\n        this.currentRoom = { ...this.room };\n    }\n\n    updateRoomforID(): void\n    {\n        const changeID = this.currentRoom.id;\n        if (this.currentRoom.key) {\n            this.RoomService.update(this.currentRoom.key, { id: changeID })\n            .then(() => {\n              this.currentRoom.id = changeID;\n              this.setIDMessage = '您的ID欄位已更新成功，重新點選item按鈕可以確認。';\n            })\n            .catch(err => console.log(err));\n        }\n    }\n\n    updateRoom(): void\n    {\n        const data = \n        {\n            id: Number(this.currentRoom.id),\n            description: this.currentRoom.description,\n            name: this.currentRoom.name,\n            type: this.currentRoom.type,\n            tags: this.currentRoom.tags,\n        };\n\n        if(this.currentRoom.key)\n        {\n            this.RoomService.update(this.currentRoom.key, data)\n                .then(() => {\n                    this.updateMessage = '您的房間資訊已更新，重新點選item按鈕可以確認。';\n                })\n                .catch( err => console.exception(err));\n        }\n    }\n\n    deleteRoom() :void\n    {\n        if(this.currentRoom.key)\n        {\n            this.RoomService.delete(this.currentRoom.key)\n                .then(() => {\n                    this.refreshList.emit();\n                    this.deleteMessage = '成功刪除房間。';\n                    console.warn('data was deleted!');\n                })\n                .catch(err => console.exception(err));\n        }\n    }\n}\n","<h3>修改詳細資料</h3>\n\n<div *ngIf=\"deleteMessage\" class=\"alert alert-danger\">\n    {{ deleteMessage }}\n</div>\n<div *ngIf=\"setIDMessage\" class=\"alert alert-warning\">\n    {{ setIDMessage }}\n</div>\n<div *ngIf=\"updateMessage\" class=\"alert alert-success\">\n    {{ updateMessage }}\n</div>\n\n<div class=\"form-group row\">\n    <label for=\"name\" class=\"col-sm-3 col-form-label\">ID</label>\n    <div class=\"col-sm-6\">\n        <input type=\"number\"\n            class=\"form-control\"\n            id=\"id\"\n            required\n            [(ngModel)] = \"currentRoom.id\"\n            name=\"id\"\n            placeholder=\"請一定要賦予 但小心服用\">\n    </div>\n    <button \n        class=\"col-sm-3 btn text-warning fw-bold rounded-2 border-2 border-warning\"\n        (click)=\"updateRoomforID()\">\n        Set\n    </button>\n\n</div>\n<div class=\"form-group row\">\n    <label for=\"name\" class=\"col-sm-3 col-form-label\">Name</label>\n    <div class=\"col-sm-9\">\n        <input type=\"text\"\n            class=\"form-control\"\n            id=\"name\"\n            required\n            [(ngModel)] = \"currentRoom.name\"\n            name=\"name\">\n    </div>\n</div>\n<div class=\"form-group row\">\n    <label for=\"name\" class=\"col-sm-3 col-form-label\">Description</label>\n    <div class=\"col-sm-9\">\n        <textarea type=\"text\"\n            class=\"form-control\"\n            id=\"description\"\n            required\n            [(ngModel)] = \"currentRoom.description\"\n            rows=\"5\"\n            name=\"description\">\n        </textarea>\n    </div>\n</div>\n<div class=\"form-group row\">\n    <label for=\"type\" class=\"col-sm-3 col-form-label\">Type</label>\n    <div class=\"col-sm-9\">\n        <input type=\"text\"\n            class=\"form-control\"\n            id=\"type\"\n            required\n            [(ngModel)] = \"currentRoom.type\"\n            name=\"type\">\n    </div>\n</div>\n<div class=\"form-group row\">\n    <label for=\"tags\" class=\"col-sm-3 col-form-label\">Tag</label>\n    <div class=\"col-sm-9\">\n        <input type=\"text\"\n            class=\"form-control\"\n            id=\"tags\"\n            required\n            [(ngModel)] = \"currentRoom.tags\"\n            name=\"tags\">\n    </div>\n</div>\n<button (click)=\"updateRoom()\" class=\"btn text-success fw-bold rounded-2 border-2 border-success m-2\">Update</button>\n<button (click)=\"deleteRoom()\" class=\"btn text-danger fw-bold rounded-2 border-2 border-danger m-2\">Delete</button>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from '../auth/auth.guard';\nimport { RoomsAddComponent } from './rooms-add/rooms-add.component';\nimport { RoomsDetailsComponent } from './rooms-details/rooms-details.component';\nimport { RoomsUseComponent } from './rooms-use/rooms-use.component';\nimport { RoomsViewComponent } from './rooms-view/rooms-view.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: RoomsViewComponent\n    },\n    {\n        path: 'add',\n        component: RoomsAddComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: ':id',\n        component: RoomsUseComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ComponentRoomsRoutingModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Chat } from 'src/app/models/chat.model';\nimport { ChatService } from 'src/app/services/chat.service';\n\n@Component({\n    selector: 'app-chats-board',\n    templateUrl: './chats-board.component.html',\n    styleUrls: ['./chats-board.component.css']\n})\nexport class ChatsBoardComponent implements OnInit {\n    @Input() roomKey?:string = '';\n    @Input() userKey?:string = '';\n\n    chatData?: Chat[];\n\n    constructor(\n        private ChatService: ChatService \n    ) { }\n\n    ngOnInit(): void\n    {\n    }\n    \n    ngOnChanges(): void\n    {\n        if(this.roomKey)\n        {\n            this.getChat(this.roomKey);\n        }\n    }\n\n    getChat(key: string): void\n    {\n        this.ChatService.getAll()\n            .snapshotChanges()\n            .pipe(\n                map(changes => \n                    changes.map(c =>\n                        ({ key: c.payload.key, ...c.payload.val() })\n                    )\n                ),\n                map(res =>\n                    res.filter(r =>\n                        r.roomKEY === key\n                    )\n                )\n            ).subscribe(data => {\n                this.chatData = data;\n                console.warn(this.chatData);\n            });\n    }\n\n}\n","<div class=\"roomDIV\" *ngFor=\"let item of chatData\">\n    <div *ngIf=\"item.userKEY !== userKey\" class=\"msgBOX float-left alert alert-secondary text-left w-auto m-1 p-2\" role=\"alert\">\n        <p class=\"font-weight-bold m-0 p-0\">\n            {{ item.userName }}\n            <span class=\"small\">{{ item.updated_date | date:'yyyy-MM-dd HH:mm:ss' }}</span>\n        </p>\n        <p class=\"m-0 p-0\">\n            {{ item.content == null? '無法讀取訊息': item.content }}\n        </p>\n    </div>\n    \n    <div *ngIf=\"item.userKEY === userKey\" class=\"msgBOX float-right alert alert-primary w-auto m-1 p-2\" role=\"alert\">\n        <p class=\"font-weight-bold m-0 p-0\">\n            {{ '我自己' }}\n            <span class=\"small\">{{ item.updated_date | date:'yyyy-MM-dd HH:mm:ss' }}</span>\n        </p>\n        <p class=\"m-0 p-0\">\n            {{ item.content == null? '無法讀取訊息': item.content }}\n        </p>\n\n    </div>\n    <div class=\"clearfix\"></div>\n</div>","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\nimport { Room } from '../models/room.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class RoomService {\n    private db_childPath = '/room';\n\n    roomRef: AngularFireList<Room>;\n\n    constructor(private db: AngularFireDatabase)\n    {\n        this.roomRef = db.list(this.db_childPath);\n    }\n\n    // 取得列表中所有資料\n    getAll(): AngularFireList<Room>\n    {\n        return this.roomRef;\n    }\n\n    // getSingleRoom(key: string): AngularFireList<Room>\n    // {\n    //     return this.db.list(this.db_childPath + \"/\" + key);\n    // }\n\n    // 新增一列資料\n    create(room: Room): any\n    {\n        return this.roomRef.push(room);\n    }\n\n    // 更新資料\n    /*\n     * @params key->id\n     * @params value->update data\n     * Promise = 非同步操作\n     */\n    update(key: string, value: any): Promise<void>\n    {\n        return this.roomRef.update(key, value);\n    }\n\n    // 刪除一列資料\n    delete(key: string): Promise<void>\n    {\n        return this.roomRef.remove(key);\n    }\n\n    // 刪除所有資料(刪除不帶任何參數)\n    deleteAll(): Promise<void>\n    {\n        return this.roomRef.remove();\n    }\n}\n"],"sourceRoot":"webpack:///"}