{"version":3,"sources":["./node_modules/ngx-clipboard/__ivy_ngcc__/fesm2015/ngx-clipboard.js","./node_modules/ngx-window-token/__ivy_ngcc__/fesm2015/ngx-window-token.js","./src/app/component-login/component-login-routing.module.ts","./src/app/component-login/component-login.module.ts","./src/app/component-login/forget-password/forget-password.component.ts","./src/app/component-login/forget-password/forget-password.component.html","./src/app/component-login/login/login.component.ts","./src/app/component-login/login/login.component.html","./src/app/component-login/sign/sign.component.ts","./src/app/component-login/sign/sign.component.html"],"names":[],"mappings":"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","file":"src_app_component-login_component-login_module_ts.js","sourcesContent":["import { DOCUMENT, CommonModule } from '@angular/common';\nimport { ɵɵdefineInjectable, ɵɵinject, Injectable, Inject, Optional, EventEmitter, Directive, Input, Output, HostListener, ViewContainerRef, TemplateRef, NgModule } from '@angular/core';\nimport { WINDOW } from 'ngx-window-token';\nimport { Subject } from 'rxjs';\n\n/**\r\n * The following code is heavily copied from https://github.com/zenorocha/clipboard.js\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\nclass ClipboardService {\r\n    constructor(document, window) {\r\n        this.document = document;\r\n        this.window = window;\r\n        this.copySubject = new Subject();\r\n        this.copyResponse$ = this.copySubject.asObservable();\r\n        this.config = {};\r\n    }\r\n    configure(config) {\r\n        this.config = config;\r\n    }\r\n    copy(content) {\r\n        if (!this.isSupported || !content) {\r\n            return this.pushCopyResponse({ isSuccess: false, content });\r\n        }\r\n        const copyResult = this.copyFromContent(content);\r\n        if (copyResult) {\r\n            return this.pushCopyResponse({ content, isSuccess: copyResult });\r\n        }\r\n        return this.pushCopyResponse({ isSuccess: false, content });\r\n    }\r\n    get isSupported() {\r\n        return !!this.document.queryCommandSupported && !!this.document.queryCommandSupported('copy') && !!this.window;\r\n    }\r\n    isTargetValid(element) {\r\n        if (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement) {\r\n            if (element.hasAttribute('disabled')) {\r\n                throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\r\n            }\r\n            return true;\r\n        }\r\n        throw new Error('Target should be input or textarea');\r\n    }\r\n    /**\r\n     * Attempts to copy from an input `targetElm`\r\n     */\r\n    copyFromInputElement(targetElm, isFocus = true) {\r\n        try {\r\n            this.selectTarget(targetElm);\r\n            const re = this.copyText();\r\n            this.clearSelection(isFocus ? targetElm : undefined, this.window);\r\n            return re && this.isCopySuccessInIE11();\r\n        }\r\n        catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * This is a hack for IE11 to return `true` even if copy fails.\r\n     */\r\n    isCopySuccessInIE11() {\r\n        const clipboardData = this.window['clipboardData'];\r\n        if (clipboardData && clipboardData.getData) {\r\n            if (!clipboardData.getData('Text')) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Creates a fake textarea element, sets its value from `text` property,\r\n     * and makes a selection on it.\r\n     */\r\n    copyFromContent(content, container = this.document.body) {\r\n        // check if the temp textarea still belongs to the current container.\r\n        // In case we have multiple places using ngx-clipboard, one is in a modal using container but the other one is not.\r\n        if (this.tempTextArea && !container.contains(this.tempTextArea)) {\r\n            this.destroy(this.tempTextArea.parentElement || undefined);\r\n        }\r\n        if (!this.tempTextArea) {\r\n            this.tempTextArea = this.createTempTextArea(this.document, this.window);\r\n            try {\r\n                container.appendChild(this.tempTextArea);\r\n            }\r\n            catch (error) {\r\n                throw new Error('Container should be a Dom element');\r\n            }\r\n        }\r\n        this.tempTextArea.value = content;\r\n        const toReturn = this.copyFromInputElement(this.tempTextArea, false);\r\n        if (this.config.cleanUpAfterCopy) {\r\n            this.destroy(this.tempTextArea.parentElement || undefined);\r\n        }\r\n        return toReturn;\r\n    }\r\n    /**\r\n     * Remove temporary textarea if any exists.\r\n     */\r\n    destroy(container = this.document.body) {\r\n        if (this.tempTextArea) {\r\n            container.removeChild(this.tempTextArea);\r\n            // removeChild doesn't remove the reference from memory\r\n            this.tempTextArea = undefined;\r\n        }\r\n    }\r\n    /**\r\n     * Select the target html input element.\r\n     */\r\n    selectTarget(inputElement) {\r\n        inputElement.select();\r\n        inputElement.setSelectionRange(0, inputElement.value.length);\r\n        return inputElement.value.length;\r\n    }\r\n    copyText() {\r\n        return this.document.execCommand('copy');\r\n    }\r\n    /**\r\n     * Moves focus away from `target` and back to the trigger, removes current selection.\r\n     */\r\n    clearSelection(inputElement, window) {\r\n        var _a;\r\n        inputElement && inputElement.focus();\r\n        (_a = window.getSelection()) === null || _a === void 0 ? void 0 : _a.removeAllRanges();\r\n    }\r\n    /**\r\n     * Creates a fake textarea for copy command.\r\n     */\r\n    createTempTextArea(doc, window) {\r\n        const isRTL = doc.documentElement.getAttribute('dir') === 'rtl';\r\n        let ta;\r\n        ta = doc.createElement('textarea');\r\n        // Prevent zooming on iOS\r\n        ta.style.fontSize = '12pt';\r\n        // Reset box model\r\n        ta.style.border = '0';\r\n        ta.style.padding = '0';\r\n        ta.style.margin = '0';\r\n        // Move element out of screen horizontally\r\n        ta.style.position = 'absolute';\r\n        ta.style[isRTL ? 'right' : 'left'] = '-9999px';\r\n        // Move element to the same position vertically\r\n        const yPosition = window.pageYOffset || doc.documentElement.scrollTop;\r\n        ta.style.top = yPosition + 'px';\r\n        ta.setAttribute('readonly', '');\r\n        return ta;\r\n    }\r\n    /**\r\n     * Pushes copy operation response to copySubject, to provide global access\r\n     * to the response.\r\n     */\r\n    pushCopyResponse(response) {\r\n        this.copySubject.next(response);\r\n    }\r\n    /**\r\n     * @deprecated use pushCopyResponse instead.\r\n     */\r\n    pushCopyReponse(response) {\r\n        this.pushCopyResponse(response);\r\n    }\r\n}\nClipboardService.ɵfac = function ClipboardService_Factory(t) { return new (t || ClipboardService)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(WINDOW, 8)); };\r\nClipboardService.ɵprov = ɵɵdefineInjectable({ factory: function ClipboardService_Factory() { return new ClipboardService(ɵɵinject(DOCUMENT), ɵɵinject(WINDOW, 8)); }, token: ClipboardService, providedIn: \"root\" });\r\nClipboardService.ctorParameters = () => [\r\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [WINDOW,] }] }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClipboardService, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [WINDOW]\n            }] }]; }, null); })();\n\nclass ClipboardDirective {\r\n    constructor(clipboardSrv) {\r\n        this.clipboardSrv = clipboardSrv;\r\n        this.cbOnSuccess = new EventEmitter();\r\n        this.cbOnError = new EventEmitter();\r\n    }\r\n    // tslint:disable-next-line:no-empty\r\n    ngOnInit() { }\r\n    ngOnDestroy() {\r\n        this.clipboardSrv.destroy(this.container);\r\n    }\r\n    onClick(event) {\r\n        if (!this.clipboardSrv.isSupported) {\r\n            this.handleResult(false, undefined, event);\r\n        }\r\n        else if (this.targetElm && this.clipboardSrv.isTargetValid(this.targetElm)) {\r\n            this.handleResult(this.clipboardSrv.copyFromInputElement(this.targetElm), this.targetElm.value, event);\r\n        }\r\n        else if (this.cbContent) {\r\n            this.handleResult(this.clipboardSrv.copyFromContent(this.cbContent, this.container), this.cbContent, event);\r\n        }\r\n    }\r\n    /**\r\n     * Fires an event based on the copy operation result.\r\n     * @param succeeded\r\n     */\r\n    handleResult(succeeded, copiedContent, event) {\r\n        let response = {\r\n            isSuccess: succeeded,\r\n            event\r\n        };\r\n        if (succeeded) {\r\n            response = Object.assign(response, {\r\n                content: copiedContent,\r\n                successMessage: this.cbSuccessMsg\r\n            });\r\n            this.cbOnSuccess.emit(response);\r\n        }\r\n        else {\r\n            this.cbOnError.emit(response);\r\n        }\r\n        this.clipboardSrv.pushCopyResponse(response);\r\n    }\r\n}\nClipboardDirective.ɵfac = function ClipboardDirective_Factory(t) { return new (t || ClipboardDirective)(ɵngcc0.ɵɵdirectiveInject(ClipboardService)); };\nClipboardDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: ClipboardDirective, selectors: [[\"\", \"ngxClipboard\", \"\"]], hostBindings: function ClipboardDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function ClipboardDirective_click_HostBindingHandler($event) { return ctx.onClick($event.target); });\n    } }, inputs: { targetElm: [\"ngxClipboard\", \"targetElm\"], container: \"container\", cbContent: \"cbContent\", cbSuccessMsg: \"cbSuccessMsg\" }, outputs: { cbOnSuccess: \"cbOnSuccess\", cbOnError: \"cbOnError\" } });\r\nClipboardDirective.ctorParameters = () => [\r\n    { type: ClipboardService }\r\n];\r\nClipboardDirective.propDecorators = {\r\n    targetElm: [{ type: Input, args: ['ngxClipboard',] }],\r\n    container: [{ type: Input }],\r\n    cbContent: [{ type: Input }],\r\n    cbSuccessMsg: [{ type: Input }],\r\n    cbOnSuccess: [{ type: Output }],\r\n    cbOnError: [{ type: Output }],\r\n    onClick: [{ type: HostListener, args: ['click', ['$event.target'],] }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClipboardDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngxClipboard]'\n            }]\n    }], function () { return [{ type: ClipboardService }]; }, { cbOnSuccess: [{\n            type: Output\n        }], cbOnError: [{\n            type: Output\n        }], onClick: [{\n            type: HostListener,\n            args: ['click', ['$event.target']]\n        }], targetElm: [{\n            type: Input,\n            args: ['ngxClipboard']\n        }], container: [{\n            type: Input\n        }], cbContent: [{\n            type: Input\n        }], cbSuccessMsg: [{\n            type: Input\n        }] }); })();\n\nclass ClipboardIfSupportedDirective {\r\n    constructor(_clipboardService, _viewContainerRef, _templateRef) {\r\n        this._clipboardService = _clipboardService;\r\n        this._viewContainerRef = _viewContainerRef;\r\n        this._templateRef = _templateRef;\r\n    }\r\n    ngOnInit() {\r\n        if (this._clipboardService.isSupported) {\r\n            this._viewContainerRef.createEmbeddedView(this._templateRef);\r\n        }\r\n    }\r\n}\nClipboardIfSupportedDirective.ɵfac = function ClipboardIfSupportedDirective_Factory(t) { return new (t || ClipboardIfSupportedDirective)(ɵngcc0.ɵɵdirectiveInject(ClipboardService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nClipboardIfSupportedDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: ClipboardIfSupportedDirective, selectors: [[\"\", \"ngxClipboardIfSupported\", \"\"]] });\r\nClipboardIfSupportedDirective.ctorParameters = () => [\r\n    { type: ClipboardService },\r\n    { type: ViewContainerRef },\r\n    { type: TemplateRef }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClipboardIfSupportedDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngxClipboardIfSupported]'\n            }]\n    }], function () { return [{ type: ClipboardService }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }]; }, null); })();\n\nclass ClipboardModule {\r\n}\nClipboardModule.ɵfac = function ClipboardModule_Factory(t) { return new (t || ClipboardModule)(); };\nClipboardModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ClipboardModule });\nClipboardModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClipboardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [ClipboardDirective, ClipboardIfSupportedDirective],\n                exports: [ClipboardDirective, ClipboardIfSupportedDirective]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ClipboardModule, { declarations: function () { return [ClipboardDirective, ClipboardIfSupportedDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [ClipboardDirective, ClipboardIfSupportedDirective]; } }); })();\n\n/*\r\n * Public API Surface of ngx-clipboard\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { ClipboardDirective, ClipboardIfSupportedDirective, ClipboardModule, ClipboardService };\n\n//# sourceMappingURL=ngx-clipboard.js.map","import { InjectionToken } from '@angular/core';\n\nconst WINDOW = new InjectionToken('WindowToken', typeof window !== 'undefined' && window.document\r\n    ? { providedIn: 'root', factory: () => window }\r\n    : { providedIn: 'root', factory: () => undefined });\n\n/*\r\n * Public API Surface of ngx-window-token\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { WINDOW };\n\n//# sourceMappingURL=ngx-window-token.js.map","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ClipboardModule } from 'ngx-clipboard';\nimport { ForgetPasswordComponent } from './forget-password/forget-password.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignComponent } from './sign/sign.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n  },\n  {\n    path: 'sign',\n    component: SignComponent\n  },\n  {\n    path: 'forget',\n    component: ForgetPasswordComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes),\n    ClipboardModule\n  ],\n  exports: [RouterModule]\n})\nexport class ComponentLoginRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ComponentLoginRoutingModule } from './component-login-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { ForgetPasswordComponent } from './forget-password/forget-password.component';\nimport { SignComponent } from './sign/sign.component';\nimport { FormsModule } from '@angular/forms';\nimport { LogoutComponent } from './logout/logout.component';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    ForgetPasswordComponent,\n    SignComponent,\n    LogoutComponent,\n  ],\n  imports: [\n    CommonModule,\n    ComponentLoginRoutingModule,\n    FormsModule\n  ]\n})\nexport class ComponentLoginModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.css']\n})\nexport class ForgetPasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row text-center\">\n    <h2>\n        笑死\n    </h2>\n</div>","import { Location, LocationStrategy, PlatformLocation } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { find, map } from 'rxjs/operators';\nimport { User } from 'src/app/models/user.model';\nimport { UserService } from 'src/app/services/user.service';\nimport { path } from 'src/environments/path.map';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n    userKey: string = '';\n    userData?: User[];\n\n    inputUserKey: string = '';\n    inputUserKeyResponseMessage: string = '';\n    inputUserKeyResponseStatus: boolean = false;\n\n    userLogin = {\n        status: false,\n        key: '',\n        nickname: '',\n        admin: false,\n    }\n\n    constructor(\n        private CookieService: CookieService,\n        private UserService: UserService,\n        private PlatformLocation: PlatformLocation,\n        private LocationStrategy: LocationStrategy\n    ){\n        this.userKey = this.CookieService.get('userKey');\n        this.findUser();\n    }\n\n    ngOnInit(): void\n    {\n        this.inputUserKeyResponseMessage = '';\n    }\n\n    requestLogin(): void\n    {\n        this.UserService.getAll().snapshotChanges()\n            .pipe(\n                map(changes => \n                    changes.map(c =>\n                        ({ key: c.payload.key, ...c.payload.val() })\n                    )\n                ),\n                map(data =>\n                data.filter(c =>\n                    c.key === this.inputUserKey\n                )\n                )\n            )\n            .subscribe(res => {\n                this.userData = res;\n                // console.warn(this.userData);\n                if(this.userData.length > 0)\n                {\n                    // 呈現資料\n                    this.userLogin.status = true;\n                    this.userLogin.nickname = String(this.userData[0].nickname);\n                    this.userLogin.admin = Boolean(this.userData[0].root);\n                    this.userLogin.key = String(this.userData[0].key);\n\n                    // 使用者回饋\n                    this.inputUserKeyResponseStatus = true;\n                    this.inputUserKeyResponseMessage = '登入成功!!';\n                    // this.LocationStrategy.replaceState;\n                    // this.LocationStrategy.replaceState(null, '', '/', '');\n\n                    // 設定Cookie\n                    this.CookieService.set('userKey', this.userLogin.key, {path: '/'});\n                    // console.log(this.CookieService.get('userKey'));\n                }\n                else\n                {\n                    // 呈現資料\n                    this.userLogin.status = false;\n                    this.userLogin.nickname = '';\n                    this.userLogin.admin = false;\n                    this.userLogin.key = '';\n                    \n                    // 使用者回饋\n                    this.inputUserKeyResponseStatus = false;\n                    this.inputUserKeyResponseMessage = '錯誤的金鑰!!';\n                }\n            })\n    }\n\n    findUser(): void\n    {\n        this.UserService.getAll().snapshotChanges()\n            .pipe(\n                map(changes => \n                    changes.map(c =>\n                        ({ key: c.payload.key, ...c.payload.val() })\n                    )\n                ),\n                map(data =>\n                    data.filter(c =>\n                        c.key === this.userKey\n                    )\n                )\n            )\n            .subscribe(res => {\n                this.userData = res;\n                if(this.userData.length > 0)\n                {\n                    this.userLogin.status = true;\n                    this.userLogin.nickname = String(this.userData[0].nickname);\n                    this.userLogin.admin = Boolean(this.userData[0].root);\n                    this.userLogin.key = String(this.userData[0].key);\n                }\n            })\n    }\n}\n","<h2>您好，使用者!</h2>\n\n<div class=\"row my-3\">\n    <div *ngIf=\"inputUserKeyResponseMessage\">\n        <div *ngIf=\"inputUserKeyResponseStatus\" class=\"alert alert-success text-center\">\n            <h4> {{ inputUserKeyResponseMessage }} </h4>\n            <span>注意: </span>\n            <p class=\"m-0 p-1 fw-bold\">如果右上角的使用者資訊不會更新，必須回到首頁並刷新頁面，因為Angular的傳輸方式只能姑且設定。</p>\n            <p class=\"m-0 p-1 fw-bold\">在子分頁(如: /article/1或/login等等)試圖更新網頁會造成Cookie遺失，如有資料不符請回到首頁重新整理即可。</p>\n            <p class=\"m-0 p-1 fw-bold\">上架在Github的網頁，除了首頁以外，重新整理會導向404分頁，詳情請見最新消息。</p>\n        </div>\n        <div *ngIf=\"!inputUserKeyResponseStatus\" class=\"alert alert-danger\">\n            <h4> {{ inputUserKeyResponseMessage }} </h4>\n        </div>\n    </div>\n</div>\n\n<div class=\"d-flex justify-content-center\" style=\"width: 100%; height: 50vh;\">\n    <div class=\"d-flex align-items-center text-center\">\n        <div class=\"flex-row\">\n            <div class=\"row text-center\">\n                <div class=\"col-12\">\n                    <h4>輸入您的資料</h4>\n                </div>\n            </div>\n            <div class=\"form-group text-center\" style=\"min-width: 250px;\">\n                <label for=\"\">您的金鑰</label>\n                <input type=\"text\" id=\"key\" class=\"form-control\" [(ngModel)] = \"inputUserKey\">\n            </div>\n            <div class=\"row text-center\">\n                <div class=\"col-12\">\n                    <button  class=\"btn btn-success\" (click)=\"requestLogin()\">登入</button>\n                </div>\n            </div>\n            <div class=\"row my-3\">\n                <div class=\"col-md-12 text-center\">\n                    <a class=\"p-1\" routerLink=\"forget\">忘記金鑰點我</a>\n                    <a class=\"p-1\" routerLink=\"sign\">註冊金鑰點我</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { filter, map } from 'rxjs/operators';\nimport { User } from 'src/app/models/user.model';\nimport { UserService } from 'src/app/services/user.service';\nimport { ClipboardModule, ClipboardService } from 'ngx-clipboard';\n\n@Component({\n    selector: 'app-sign',\n    templateUrl: './sign.component.html',\n    styleUrls: ['./sign.component.css']\n})\n\nexport class SignComponent implements OnInit {\n    user: User = new User();\n    userData?: User[];\n\n    repeat: boolean = true;\n    submitted: boolean = false;\n    message: string = '';\n    responseKEY:string = '';\n    copyMessage: string = '';\n\n    constructor(\n        private UserService: UserService,\n        private _clipboardService: ClipboardService\n    ) { }\n\n    ngOnInit(): void\n    {\n        // 因為會有重複註冊的可能\n        this.repeat = true;\n        this.submitted = false;\n        this.message = '';\n        this.responseKEY = '';\n        this.copyMessage = '';\n    }\n\n    saveUser(): void\n    {\n        this.repeat = true;\n        this.UserService.getAll()\n        .snapshotChanges()\n        .pipe(\n            map(changes => \n                changes.map(c =>\n                    ({ key: c.payload.key, ...c.payload.val() })\n                )\n            ),\n            map(c =>\n                c.filter(res =>\n                    res.nickname === this.user.nickname\n                )\n            )\n        )\n        .subscribe(response => {\n            this.userData = response;\n            if(this.userData.length === 0)\n            {\n                this.createUser();\n            }else{\n                this.message = '暱稱已重複，請重新嘗試。';\n            }\n        });\n    }\n\n    createUser(): void\n    {\n        this.user.signin_date = String(new Date());\n        this.UserService.create(this.user)\n        .then( () => {\n            this.submitted = true;\n        })\n        this.feedback();\n    }\n\n    feedback(): void\n    {\n        this.UserService.getAll()\n        .snapshotChanges()\n        .pipe(\n            map(changes => \n                changes.map(c =>\n                    ({ key: c.payload.key, ...c.payload.val() })\n                )\n            ),\n            map(c =>\n                c.filter(res =>\n                    res.nickname === this.user.nickname\n                )\n            )\n        )\n        .subscribe(response => {\n            this.userData = response;\n            this.responseKEY = String(this.userData[0].key);\n        });\n    }\n\n    copy(text: string){\n        this._clipboardService.copy(text);\n        this.copyMessage = '已複製成功!';\n    }\n}\n","<h2>註冊資料</h2>\n\n<div *ngIf=\"message && !submitted\" class=\"alert alert-warning\">\n    {{ message }}\n</div>\n<div *ngIf=\"submitted\" class=\"alert alert-success text-center\">\n    <h4 class=\"text-center my-2\">註冊成功，您的金鑰為</h4>\n    <div *ngIf=\"copyMessage\" class=\"text-center\">\n        {{ copyMessage }}\n    </div>\n    <div class=\"row p-3\">\n        <div class=\"col-10\">\n            <input class=\"form-control\" disabled [(ngModel)]=\"responseKEY\">\n        </div>\n        <div class=\"col-2\">\n            <button class=\"btn btn-secondary w-100\" (click)=\"copy(responseKEY)\">\n                複製\n            </button>            \n        </div>\n    </div>\n</div>\n\n<div class=\"form-group\">\n    <label for=\"\">Nickname</label>\n    <div>\n        <input type=\"text\"\n        class=\"form-control\"\n        [(ngModel)] = 'user.nickname'\n        placeholder=\"請填入您的暱稱\">\n    </div>\n</div>\n<div class=\"row text-right\">\n    <div class=\"col-md-8 text-right text-muted\">\n        點選註冊就代表您同意我們取得您的IP以及Cookie\n    </div>\n    <div class=\"col-md-4 text-right\">\n        <button class=\"btn btn-success px-5\" (click)=\"saveUser()\">註冊</button>\n    </div>\n</div>"],"sourceRoot":"webpack:///"}