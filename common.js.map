{"version":3,"sources":["./src/app/component-rooms/chats-add/chats-add.component.ts","./src/app/component-rooms/chats-add/chats-add.component.html","./src/app/models/chat.model.ts","./src/app/services/chat.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { Chat } from 'src/app/models/chat.model';\nimport { ChatService } from 'src/app/services/chat.service';\n\n@Component({\n    selector: 'app-chats-add',\n    templateUrl: './chats-add.component.html',\n    styleUrls: ['./chats-add.component.css']\n})\nexport class ChatsAddComponent implements OnInit {\n    @Input() userKey?:string;\n    @Input() userNickname:string = '';\n    @Input() roomKey:string = '';\n    \n    chat: Chat = new Chat();\n    \n    constructor(private ChatService: ChatService) \n    {\n        \n    }\n\n    ngOnInit(): void\n    {\n        this.chat.updated_date = String(new Date());\n    }\n\n    ngOnChanges(): void\n    {\n        if(this.userKey)\n        {\n            this.chat.userKEY = this.userKey;\n        }\n        if(this.userNickname)\n        {\n            this.chat.userName = this.userNickname;\n        }\n        if(this.roomKey)\n        {\n            this.chat.roomKEY = this.roomKey;\n        }\n    }\n\n    createMessage(): void\n    {\n        this.ChatService.create(this.chat)\n            .then( () => {\n                console.warn('created successfully!');\n            })\n    }\n}\n","<h2 class=\"d-none\">新增對話 - 測試</h2>\n\n<div class=\"form-row d-none\">\n    <div class=\"col-md-3 mb-3 text-center\">\n        <label for=\"\">使用者的暱稱</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"userName\" disabled required [(ngModel)]=\"chat.userName\">\n    </div>\n    <div class=\"col-md-3 mb-3 text-center\">\n        <label for=\"\" class=\"text-center\">使用者的KEY</label>\n        <input type=\"text\" class=\"form-control\"  placeholder=\"userKEY\" disabled required [(ngModel)]=\"chat.userKEY\">\n    </div>\n    <div class=\"col-md-3 mb-3 text-center\">\n        <label for=\"\" class=\"text-center\">聊天室的KEY</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"roomKEY\" disabled required [(ngModel)]=\"chat.roomKEY\">\n    </div>\n    <div class=\"col-md-3 mb-3 text-center\">\n        <label for=\"\" class=\"text-center\">發言時間</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"updated_date\" disabled required [(ngModel)]=\"chat.updated_date\">\n    </div>\n</div>\n<div class=\"form-group row\">\n    <div class=\"col-10\">\n        <textarea type=\"text\"\n            class=\"form-control\"\n            id=\"content\"\n            required\n            [(ngModel)] = \"chat.content\"\n            rows=\"1\"\n            placeholder=\"請填寫訊息...\">\n        </textarea>\n    </div>\n    <div class=\"col-2\">\n        <button (click)=\"createMessage()\" class=\"btn btn-success w-100\">送出</button>\n    </div>\n</div>","export class Chat\n{\n    key?: string | null;\n    id?: string;\n    userName?: string;\n    userKEY?: string;\n    roomKEY?: string;\n    content?: string;\n    ban?: boolean;\n    delete?: boolean;\n    updated_date?: any;\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\nimport { Chat } from '../models/chat.model';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ChatService {\n    private db_childPath = '/chat';\n\n    chatRef: AngularFireList<Chat>;\n\n    constructor(private db: AngularFireDatabase)\n    {\n        this.chatRef = db.list(this.db_childPath);\n    }\n\n    getAll(): AngularFireList<Chat>\n    {\n        return this.chatRef;\n    }\n\n    create(chat: Chat): any\n    {\n        return this.chatRef.push(chat);\n    }\n    \n    update(key: string, value: any): Promise<void>\n    {\n        return this.chatRef.update(key, value);\n    }\n\n    // 刪除一列資料\n    delete(key: string): Promise<void>\n    {\n        return this.chatRef.remove(key);\n    }\n\n    // 刪除所有資料(刪除不帶任何參數)\n    deleteAll(): Promise<void>\n    {\n        return this.chatRef.remove();\n    }\n}\n"],"sourceRoot":"webpack:///"}